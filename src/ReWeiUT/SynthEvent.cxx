
#include "SynthEvent.h"

using namespace genie;

SynthEvent::SynthEvent()
   : genie::EventRecord()
{

   // "synthetic" event
   //
   InitialState init_state( 6, 12, 14 );
   TLorentzVector nu_p4(0., 0., 3., 3.); //px, py, pz, E in GeV
   init_state.SetProbeP4( nu_p4 );
   init_state.TgtPtr()->SetHitNucPdg( 2112 );
      
   this->AttachSummary( new Interaction( init_state, ProcessInfo( kScQuasiElastic, kIntWeakCC ) ) );
   this->Summary()->KinePtr()->Setx( 0.538, true );
   this->Summary()->KinePtr()->Sety( 0.042, true );
   this->Summary()->KinePtr()->SetQ2( 0.103, true );
   this->Summary()->KinePtr()->SetW( 0.938, true );
   this->Summary()->KinePtr()->UseSelectedKinematics(); // this is a must if kine vars are marked as "selected" 
                                                               // which is typically the case when an event is generated by the EVTdriver;
					                       // if not, the returned xsec=0
   this->Summary()->SetBit(kIAssumeFreeNucleon); // this is essential to generate diff. xsec; otherwise somethig else is generated
                                                        // and this is what the RW does !!!
      
//
// add probe and target to the event; probe is mandatory, otherwise the RW will crash
// 
   this->AddParticle( 14,         kIStInitialState,        -1, -1,  4,  4,  0.,     0.,     3.,     3.,   
                             0.982484, 0.250677, -0.742634, 0.000000 );
   this->AddParticle( 1000060120, kIStInitialState,        -1, -1,  2,  3,  0.,     0.,     0.,    11.175, 
                             0., 0., 0., 0. );

/* in this case no need to have all secondaries in the event record, just overall kinenatic and probe/target would be enough

   synth_event->AddParticle( 2112,       kIStNucleonTarget,        1, -1,  5,  5, -0.157, -0.071,  0.149,  0.918, 
                             0.982484, 0.250677, -0.742634, 0.000000 );
   synth_event->AddParticle( 1000060110, kIStIntermediateState,    1, -1, 11, 11,  0.157,  0.071, -0.149, 10.257, 
                             0., 0., 0., 0. );
   synth_event->AddParticle( 13,         kIStStableFinalState,     0, -1, -1, -1, -0.202,  0.241,  2.871,  2.890, 
                             0.982484, 0.250677, -0.742634, 0.000000 );
   synth_event->AddParticle( 2212,       kIStHadronInTheNucleus,   2, -1,  6,  6,  0.045, -0.312,  0.277,  1.028, 
                             0.982484, 0.250677, -0.742634, 0.000000 );
   synth_event->AddParticle( 2000000300, kIStNucleonClusterTarget, 5, -1,  7, 10,  0.045, -0.312,  0.277,  1.028, 
                             1.041835, -0.157858, -0.379211, 0.000000 );
   synth_event->AddParticle( 2212,       kIStStableFinalState,     6, -1, -1, -1, -0.074, -0.185,  0.238,  0.988, 
                             1.041835, -0.157858, -0.379211, 0.000000 );
   synth_event->AddParticle( 2212,       kIStStableFinalState,     6, -1, -1, -1,  0.085,  0.100, -0.023,  0.948, 
                             1.041835, -0.157858, -0.379211, 0.000000 );
   synth_event->AddParticle( 2212,       kIStStableFinalState,     6, -1, -1, -1, -0.072, -0.094, -0.048,  0.947, 
                             1.041835, -0.157858, -0.379211, 0.000000 );
   synth_event->AddParticle( 2112,       kIStStableFinalState,     6, -1, -1, -1,  0.107, -0.133,  0.110,  0.961, 
                             1.041835, -0.157858, -0.379211, 0.000000 );
   synth_event->AddParticle( 2000000002, kIStFinalStateNuclearRemnant, 3, -1, -1, -1, 0.157149,0.071223,-0.148711,7.440439,
                             0., 0., 0., 0. );
   synth_event->SetXSec( 1.40526805040119e-10 );
   synth_event->SetDiffXSec( 4.1199820102841004e-11, kPSQ2fE );
*/

}
